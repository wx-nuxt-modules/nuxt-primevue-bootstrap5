@import "bootstrap/scss/mixins/gradients";

$sizes: ('sm', 'lg');

%menu-filter-icon {
  position: absolute;
  top: 50%;
  margin-top: calc($input-height-sm * -0.25);
  right: $input-padding-x-sm;
}

%menu-header {
  padding-left: var(--#{$prefix}dropdown-item-padding-x);
  padding-right: var(--#{$prefix}dropdown-item-padding-x);
  margin-bottom: var(--#{$prefix}dropdown-padding-y);
}

%menu-filter-container {
  position: relative;
}

.bpv-form-select {
  --p-clear-icon-width: #{$form-select-clear-icon-width};
  --p-clear-icon-height: #{$form-select-clear-icon-height};
  --p-dropdown-icon-width: #{$form-select-dropdown-icon-width};
  --p-dropdown-icon-height: #{$form-select-dropdown-icon-height};

  position: relative;

  .bpv-form-select-input {
    cursor: pointer;
    background-image: var(--#{$prefix}form-select-bg-icon);

    &.bpv-form-select-input-placeholder {
      color: $input-placeholder-color;
    }

    @if $enable-validation-icons {
      &:not([multiple]):not([size]),
      &:not([multiple])[size="1"] {
        background-position: $form-select-feedback-icon-position;
        background-size: $form-select-feedback-icon-size;
      }
    }

    &.bpv-form-select-input-disabled {
      border-color: $form-select-disabled-border-color;
      background-color: $form-select-disabled-bg;
      color: $form-select-disabled-color;
      cursor: default;

      &:focus {
        border-color: var(--#{$prefix}border-color);

        @if $enable-shadows {
          @include box-shadow(none);
        } @else {
          // Avoid using mixin so we can pass custom focus shadow properly
          box-shadow: none;
        }
      }
    }

    @each $size in $sizes {
      &.bpv-form-select-input-#{$size} {
        @if ($size == 'sm') {
          padding: $form-select-input-padding-y-sm $form-select-input-indicator-padding-sm $form-select-input-padding-y-sm $form-select-input-padding-x-sm;
          font-size: $form-select-input-font-size-sm;
        } @else if ($size == 'lg') {
          padding: $form-select-input-padding-y-lg $form-select-input-indicator-padding-lg $form-select-input-padding-y-lg $form-select-input-padding-x-lg;
          font-size: $form-select-input-font-size-lg;
        }
      }
    }
  }

  .bpv-form-select-trigger {
    cursor: pointer;
    position: absolute;
    top: 0;
    right: $form-select-padding-x;
    height: 100%;
    display: flex;
    align-items: center;

    > * {
      width: var(--p-dropdown-icon-width);
      height: var(--p-dropdown-icon-height);
    }
  }

  .bpv-form-select-clear-icon {
    width: var(--p-clear-icon-width);
    height: var(--p-clear-icon-height);
    padding: 0;
    border-radius: 0;
    cursor: pointer;
    position: absolute;
    top: calc(50% - var(--p-clear-icon-height) * 0.5);
    right: calc(#{$form-select-padding-x * 2} + var(--p-dropdown-icon-width));

    * {
      display: none;
    }
  }

  &:has(.bpv-form-select-clear-icon) {
    .bpv-form-select-input {
      padding-right: calc(#{$form-select-indicator-padding} + var(--p-dropdown-icon-width));
    }
  }
}

.bpv-form-select-menu {
  --p-anchor-gutter: 2px;

  @each $size in $sizes {
    &.bpv-form-select-menu-#{$size} {
      .bpv-form-select-menu-item {
        @if ($size == 'sm') {
          font-size: $form-select-menu-label-font-size-sm;
        } @else if ($size == 'lg') {
          font-size: $form-select-menu-label-font-size-lg;
        }
      }
    }
  }

  &.bpv-form-select-menu-enter-from {
    opacity: 0;
    transform: scaleY(0.8);
  }

  &.bpv-form-select-menu-enter-active {
    transition: opacity, transform 120ms cubic-bezier(0, 0, 0.2, 1);
  }

  &.bpv-form-select-menu-leave-active {
    transition: opacity 100ms linear;
  }

  &.bpv-form-select-menu-leave-to {
    opacity: 0;
  }

  .bpv-form-select-menu-wrapper-list {
    overflow: auto;

    .bpv-form-select-menu-list {
      position: static;
      list-style: none;
      padding: 0;
      margin: 0;

      .bpv-form-select-menu-item {
        position: relative;

        .bpv-form-select-menu-item-icon {
          position: absolute;
          left: 7px;
          top: 0;
          display: flex;
          align-items: center;
          height: 100%;

          > svg {
            width: 14px;
          }

          &.bpv-form-select-menu-item-icon-blank {
            + .bpv-form-select-menu-item-label {
              &:active {
                color: var(--#{$prefix}dropdown-link-hover-color);
                @include gradient-bg(var(--#{$prefix}dropdown-link-hover-bg));
              }
            }
          }
        }

        .bpv-form-select-menu-item-label {
          $base: var(--#{$prefix}dropdown-item-padding-x);

          cursor: pointer;
          padding-left: calc($base + 14px);
        }

        &.active {
          .bpv-form-select-menu-item-icon {
            color: var(--#{$prefix}dropdown-link-color);

            &.bpv-form-select-menu-item-icon-check {
              + .bpv-form-select-menu-item-label {
                color: var(--#{$prefix}dropdown-link-hover-color);
                @include gradient-bg(var(--#{$prefix}dropdown-link-hover-bg));
              }
            }
          }

          .bpv-form-select-menu-item-label {
            color: var(--#{$prefix}dropdown-link-active-color);
            @include gradient-bg(var(--#{$prefix}dropdown-link-active-bg));
          }
        }

        &.focus {
          color: var(--#{$prefix}dropdown-link-hover-color);
          text-decoration: if($link-hover-decoration == underline, none, null);
          @include gradient-bg(var(--#{$prefix}dropdown-link-hover-bg));
        }

        &.bpv-form-select-menu-item-group {
          .bpv-form-select-menu-item-label {
            font-weight: $font-weight-bold;
            cursor: auto;

            &:hover {
              background-color: inherit;
            }

            &:active, &:focus {
              color: inherit;
            }
          }
        }
      }

      .bpv-form-select-menu-item-empty-message {
        --#{$prefix}dropdown-link-hover-color: var(--#{$prefix}dropdown-link-color);
        --#{$prefix}dropdown-link-hover-bg: var(--#{$prefix}dropdown-link-bg);
        --#{$prefix}dropdown-link-active-bg: var(--#{$prefix}dropdown-link-bg);
        --#{$prefix}dropdown-link-active-color: var(--#{$prefix}dropdown-link-color);

        user-select: none;
      }
    }
  }

  .bpv-form-select-menu-header {
    @extend %menu-header;

    .bpv-form-select-menu-filter-container {
      @extend %menu-filter-container;

      .bpv-form-select-menu-filter-icon {
        @extend %menu-filter-icon;
      }
    }
  }
}

.bpv-form-multiselect-menu {
  .bpv-form-multiselect-menu-header {
    @extend %menu-header;

    display: flex;
    justify-content: space-between;
    align-items: center;

    > .btn-close {
      padding: 0;
      margin-left: var(--#{$prefix}dropdown-item-padding-x);
    }

    > .bpv-form-checkbox {
      margin-right: var(--#{$prefix}dropdown-item-padding-x);
    }
  }

  .bpv-form-multiselect-menu-item {
    display: flex;
    align-items: center;
    padding: var(--#{$prefix}dropdown-item-padding-y) var(--#{$prefix}dropdown-item-padding-x);
    cursor: pointer;

    .bpv-form-multiselect-menu-item-option {
      padding-left: $form-check-padding-start - $form-check-input-width;
    }
  }

  .bpv-form-multiselect-menu-filter-container {
    @extend %menu-filter-container;

    flex: 1 0;

    .bpv-form-select-menu-filter-icon {
      @extend %menu-filter-icon;
    }
  }

  @each $size in $sizes {
    &.bpv-form-select-menu-#{$size} {
      .bpv-form-multiselect-menu-header {
        @if ($size == 'sm') {
          font-size: $form-select-menu-label-font-size-sm;
        } @else if ($size == 'lg') {
          font-size: $form-select-menu-label-font-size-lg;
        }
      }
    }
  }
}
